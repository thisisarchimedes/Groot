apiVersion: apps/v1
kind: Deployment
metadata:
  name: groot-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: groot-eth-nodes
  template:
    metadata:
      labels:
        app: groot-eth-nodes
    spec:
      hostNetwork: true
      tolerations:
      - key: "eks.amazonaws.com/compute-type"
        operator: "Equal"
        value: "fargate"
        effect: "NoSchedule"
      containers:
      - name: eth-node-1
        image: 240910251918.dkr.ecr.us-west-1.amazonaws.com/groot:arch-production-node
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: demoapp-config
        env:
        - name: ALCHEMY_API_KEY
          valueFrom:
            secretKeyRef:
              name: alchemy-api-key
              key: ALCHEMY_API_KEY
        - name: HARDHAT_PORT
          valueFrom:
            configMapKeyRef:
              name: demoapp-config
              key: MAIN_LOCAL_NODE_PORT
        ports:
        - containerPort: 8545
      - name: eth-node-2
        image: 240910251918.dkr.ecr.us-west-1.amazonaws.com/groot:arch-production-node
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: demoapp-config
        env:
        - name: ALCHEMY_API_KEY
          valueFrom:
            secretKeyRef:
              name: alchemy-api-key
              key: ALCHEMY_API_KEY
        - name: HARDHAT_PORT
          valueFrom:
            configMapKeyRef:
              name: demoapp-config
              key: ALT_LOCAL_NODE_PORT
        ports:
        - containerPort: 18545
      restartPolicy: Always