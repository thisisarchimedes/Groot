apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    scrape_configs:
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
                - 'alertmanager:9093'

    rule_files:
      - /etc/prometheus/rules/container-readiness.yml

    remote_write:
      - url: "https://metric-api.newrelic.com/prometheus/v1/write?prometheus_server=groot-prometheus-server"
        bearer_token: "$NEW_RELIC_API_KEY"

  container-readiness.yml: |
    groups:
      - name: container-readiness
        rules:
          - alert: ContainerNotReady
            expr: kube_pod_container_status_ready{container!="POD"} == 0
            for: 1m
            labels:
              severity: warning
            annotations:
              summary: "Container not ready"
              description: "Container {{ $labels.container }} in pod {{ $labels.pod }} is not ready."
              log_message: "Container {{ $labels.container }} in pod {{ $labels.pod }} is not ready."
              log_url: "https://log-api.newrelic.com/log/v1"
              log_attributes: |
                {
                  "service": "Groot",
                  "container": "{{ $labels.container }}",
                  "pod": "{{ $labels.pod }}"
                }
              log_api_key: "$NEW_RELIC_API_KEY"